alias: Geofenced Notify
mode: queued
max: 20
icon: mdi:message
fields:
  target_person:
    selector:
     entity: 
      domain: person
    name: Target Person
    description: The target person for the notification.
    required: true
  title:
    selector:
      text: null
    name: Title
    default: Home Assistant
    required: true
  message:
    selector:
      text: null
    name: Message
    required: true
    default: Hey there!
  do_not_queue:
    selector:
      boolean: null
    name: Do Not Queue
    description: >-
      Do not queue notification, even if conditions are met (ignore it instead).
    required: false
  ttl_minutes:
    selector:
      number:
        min: 0
        max: 525600  # one year
        step: 1
        mode: box
    name: Time To Live Minutes
    description: >-
      Queued notification timeout in minutes (if ever queued). If specified,
      after that number of minutes, the notification will be skipped when the
      queue is retrieved.
  max_distance:
    selector:
      number:
        min: 0
        max: 24902
        step: 1
        mode: box
    name: Maximum Distance
    description: >-
      The maximum distance in miles to geofence the notification.
      If specified, the notification will only be sent to users
      within the specified distance from home and queued for all others.
sequence:
  - if:
    - condition: or
      conditions:
      # Notifications geofenced by distance from the target zone
      - alias: The target person is outside the maximum distance
        condition: and
        conditions:
          - alias: max_distance is defined
            condition: template
            value_template: "{{ max_distance is defined }}"
          - alias: target_person is outside the maximum distance
            condition: template
            value_template: "{{ (states('sensor.' + (state_attr(zone.home, 'friendly_name') | slugify ) + '_' + state_attr(target_person, 'id') + '_distance') | float) >= max_distance}}"
      # Notifications geofenced by zone presence alone
      - alias: The target person is not home
        condition: and
        conditions:
          - alias: max_distance is not defined
            condition: template
            value_template: "{{ max_distance is not defined or max_distance }}"
          - alias: target_person is not home
            condition: template
            value_template: "{{ is_state(target_person, 'not_home') }}"
    then:
      - variables:
          queue: "{{ 'todo.queued_notifications_' + state_attr(target_person, 'friendly_name') | slugify }}"
      - if:
          - condition: template
            value_template: "{{ do_not_queue is not defined or not do_not_queue }}"
        then:
          - service: todo.get_items
            target:
              entity_id: "{{ queue }}"
            data:
              status: needs_action
            response_variable: result
          - if:
              - condition: template
                value_template: >-
                  {{ not message in result[queue]['items'] | map(attribute='summary') }}
            then:
              - service: todo.add_item
                data:
                  item: "{{ message }}"
                  due_datetime: >-
                    {{ now() + timedelta(minutes=(ttl_minutes if (ttl_minutes is defined and ttl_minutes > 0) else 525600)) }}
                target:
                  entity_id: "{{ queue }}"
            else:
              - service: todo.update_item
                data:
                  item: "{{ message }}"
                  due_datetime: >-
                    {{ now() + timedelta(minutes=(ttl_minutes if (ttl_minutes is defined and ttl_minutes > 0) else 525600)) }}
                target:
                  entity_id: "{{ queue }}"
    else:
      - variables:
          # Attempt to get the preferred notification target, falling back to their first device tracker
          target_entity: >-
            {% set preferred_target = states('input_text.preferred_notification_target_' + state_attr(target_person, 'id')) %}
            {% if preferred_target != 'unknown' %}
              {{ preferred_target }}
            {% else %}
              {{ 'notify.mobile_app_' + state_attr(state_attr(target_person, 'device_trackers')[0], 'friendly_name') | slugify }}
            {% endif %}
      - action: "{{ target_entity }}"
        data:
          title: "{{ title }}"
          message: "{{ message }}"